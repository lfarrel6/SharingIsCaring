
==================== FINAL INTERFACE ====================
2017-11-29 23:43:49.793247 UTC

interface FileServerV2-0.1.0.0-F3xgtrBdu9hCz43igDbNnv:File 8002
  interface hash: 8b9ac01d2775c39a673ec3f402468083
  ABI hash: ab28cabb9f09ce37cd24ca90103d7357
  export-list hash: a7a50674b698f8654485c9ec2cd5e781
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b17205fb016d7ec64e27f697b667a002
  sig of: Nothing
  used TH splices: False
  where
exports:
  File.getPath
  File.newFile
  File.File{File.File path state}
module dependencies: Locking
package dependencies: base-4.9.1.0*
                      filepath-1.4.1.1@filepath-1.4.1.1 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  Locking 0c8227193825f0eacb49595eee0d2be4
  exports: a5ae4bab3fdbc6d42b7d2b090a48f834
  FileState 84aee55bf1c540a1f5efd1de2951a655
  available fb00406b7aed95d598ae5fbeb8cee195
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.IO 4d461f9283683225c61e68db403481ad
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  filepath-1.4.1.1@filepath-1.4.1.1:System.FilePath a1833828b05bb217a8b2e2d074b495d5
cbb9e33ef807bf2997e23462e404e226
  $fShowFile :: GHC.Show.Show File.File
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ File.File
                  File.$fShowFile_$cshowsPrec
                  File.$fShowFile_$cshow
                  File.$fShowFile_$cshowList -}
d5ffbdf91cf184f1be83713a59ba7d5f
  $fShowFile1 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
cbb9e33ef807bf2997e23462e404e226
  $fShowFile_$cshow :: File.File -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,A)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: File.File) ->
                 case w of ww { File.File ww1 ww2 -> File.$w$cshow ww1 }) -}
cbb9e33ef807bf2997e23462e404e226
  $fShowFile_$cshowList :: [File.File] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [File.File]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ File.File
                   (File.$fShowFile_$cshowsPrec GHC.Show.shows22)
                   ls
                   s) -}
cbb9e33ef807bf2997e23462e404e226
  $fShowFile_$cshowsPrec ::
    GHC.Types.Int -> File.File -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U(1*U,A)><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: File.File)
                   (w2 :: GHC.Base.String) ->
                 case w1 of ww { File.File ww1 ww2 ->
                 File.$w$cshowsPrec ww1 w2 }) -}
c2650ba4cec15b037c112f630d650e12
  $s$dmshowList1 :: File.File -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (w :: File.File) (w1 :: GHC.Base.String)[OneShot] ->
                 case w of ww { File.File ww1 ww2 -> File.$w$cshowsPrec ww1 w1 }) -}
59adb827b07a648933890fffa6a9479e
  $tc'File :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6633446198335630078##
                   7180882756092750899##
                   File.$trModule
                   File.$tc'File1) -}
d2a598ed5a0f194d17a523162b34cec2
  $tc'File1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'File"#) -}
74626cb5608bde496e18aaeccb9ebc15
  $tcFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9058105516870978681##
                   16109339796110504339##
                   File.$trModule
                   File.$trModule1) -}
61a4c4527bdbc33ee547c38ed4c8157d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module File.$trModule2 File.$trModule1) -}
f0c66568f9602e15af360b5f86dc0058
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "File"#) -}
132b352549fb92ef34dbc623be82efeb
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "FileServerV2-0.1.0.0-F3xgtrBdu9hCz43igDbNnv"#) -}
f9791a574d9a35c47611ad3390cdd99d
  $w$cshow :: GHC.IO.FilePath -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.IO.FilePath) ->
                 GHC.CString.unpackAppendCString#
                   "File at: "#
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.shows6
                      (GHC.Show.showLitString ww File.$fShowFile1))) -}
43ce610ca51286225dd4a0fa1e909ca3
  $w$cshowsPrec ::
    GHC.IO.FilePath -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.IO.FilePath) (w :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   "File at: "#
                   (GHC.Base.++
                      @ GHC.Types.Char
                      (GHC.Types.:
                         @ GHC.Types.Char
                         GHC.Show.shows6
                         (GHC.Show.showLitString ww File.$fShowFile1))
                      w)) -}
cbb9e33ef807bf2997e23462e404e226
  data File
    = File {path :: GHC.IO.FilePath, state :: Locking.FileState}
b7c513376f1f61611b9311445956d473
  getPath :: File.File -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (f :: File.File) ->
                 case f of wild { File.File ds ds1 -> ds }) -}
586213bdbe8403f5b4055430b2431331
  newFile :: GHC.Base.String -> File.File
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (loc :: GHC.Base.String) -> File.File loc Locking.Available) -}
005607cb29685d8dd10d00a8d2407f3d
  path :: File.File -> GHC.IO.FilePath
  RecSel Left File.File
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: File.File) ->
                 case ds of wild { File.File ds1 ds2 -> ds1 }) -}
c09664a591f0fc33add070f71ca16912
  state :: File.File -> Locking.FileState
  RecSel Left File.File
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: File.File) ->
                 case ds of wild { File.File ds1 ds2 -> ds2 }) -}
instance [safe] GHC.Show.Show [File.File] = File.$fShowFile
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

