
==================== FINAL INTERFACE ====================
2017-12-01 17:52:14.590269 UTC

interface FileServerV2-0.1.0.0-6BZsKY1l9t1iy3IKeXKwR:Locking 8002
  interface hash: 55ceb18ce34f1f17eb51761806c283ee
  ABI hash: dcd0e010ec3f74a5c675365daf8bc973
  export-list hash: 46460c7f27595c12e7e943da9e794d05
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f8b847b675a91348479da0c1f8d4b9ba
  sig of: Nothing
  used TH splices: False
  where
exports:
  Locking.available
  Locking.readOnly
  Locking.unavailable
  Locking.FileState
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
34dee828a4768e9bab27d89b51d1792d
  $fShowFileState :: GHC.Show.Show Locking.FileState
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Locking.FileState
                  Locking.$fShowFileState_$cshowsPrec
                  Locking.$fShowFileState_$cshow
                  Locking.$fShowFileState_$cshowList -}
6446384957f631eb0c3c588ea6859677
  $fShowFileState1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Unavailable"#) -}
9907a4ff53ccb4b475b6c2af3b094858
  $fShowFileState2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ReadOnly"#) -}
a30aaf338336b4f8460f2274b159f782
  $fShowFileState3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Available"#) -}
34dee828a4768e9bab27d89b51d1792d
  $fShowFileState_$cshow :: Locking.FileState -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Locking.FileState) ->
                 case x of wild {
                   Locking.Available -> Locking.$fShowFileState3
                   Locking.ReadOnly -> Locking.$fShowFileState2
                   Locking.Unavailable -> Locking.$fShowFileState1 }) -}
34dee828a4768e9bab27d89b51d1792d
  $fShowFileState_$cshowList :: [Locking.FileState] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Locking.FileState
                   Locking.$w$cshowsPrec) -}
34dee828a4768e9bab27d89b51d1792d
  $fShowFileState_$cshowsPrec ::
    GHC.Types.Int -> Locking.FileState -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Locking.FileState)
                   (w2 :: GHC.Base.String) ->
                 Locking.$w$cshowsPrec w1 w2) -}
4b0eaba6014913dbea8dda34477ce409
  $tc'Available :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6581554090687209819##
                   6062168849169790846##
                   Locking.$trModule
                   Locking.$tc'Available1) -}
d92899e27dce438af43934e4a7cfeb9e
  $tc'Available1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Available"#) -}
f26847e432ee778e4701066f024ded96
  $tc'ReadOnly :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5505118406380183491##
                   13577530197639958254##
                   Locking.$trModule
                   Locking.$tc'ReadOnly1) -}
756da62b97f395b75d9cdf71d15ff843
  $tc'ReadOnly1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ReadOnly"#) -}
13d889b38e26f936a9313ea6784e08be
  $tc'Unavailable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17952840077271832831##
                   803526869771899494##
                   Locking.$trModule
                   Locking.$tc'Unavailable1) -}
57a8e2d7dde95a6db0447346cb0d391c
  $tc'Unavailable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Unavailable"#) -}
2b0695b0c7e773ec6163cc391e6cf7d6
  $tcFileState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   384104435404570748##
                   10153170429875613221##
                   Locking.$trModule
                   Locking.$tcFileState1) -}
e507298abdafe72e5f6b00665abb371f
  $tcFileState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FileState"#) -}
41c706b1d9b4f6a82694590f8706bd8b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Locking.$trModule2
                   Locking.$trModule1) -}
1aa0cea98d57c224a696bbbe9dbe6f18
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Locking"#) -}
29a145a458385eda5fc3595b4b26e003
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "FileServerV2-0.1.0.0-6BZsKY1l9t1iy3IKeXKwR"#) -}
34dee828a4768e9bab27d89b51d1792d
  $w$cshowsPrec ::
    Locking.FileState -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Locking.FileState) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Locking.Available
                   -> GHC.Base.++ @ GHC.Types.Char Locking.$fShowFileState3 w1
                   Locking.ReadOnly
                   -> GHC.Base.++ @ GHC.Types.Char Locking.$fShowFileState2 w1
                   Locking.Unavailable
                   -> GHC.Base.++ @ GHC.Types.Char Locking.$fShowFileState1 w1 }) -}
34dee828a4768e9bab27d89b51d1792d
  data FileState = Available | ReadOnly | Unavailable
05ce40027d533307e4f6ba9a07326b8f
  available :: Locking.FileState
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True) Locking.Available -}
51e7b6791082a367dfe6e554c2f93acc
  readOnly :: Locking.FileState
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True) Locking.ReadOnly -}
fb2d4725734a3c9fa668e7d2d7c1d5a9
  unavailable :: Locking.FileState
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True) Locking.Unavailable -}
instance [safe] GHC.Show.Show [Locking.FileState]
  = Locking.$fShowFileState
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

