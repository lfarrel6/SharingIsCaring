
==================== FINAL INTERFACE ====================
2017-11-30 21:17:24.3141473 UTC

interface FileServerV2-0.1.0.0-1Temc20BNmO6CbLDWXQFSK:Locking 8002
  interface hash: 26aa31c9f2f7b2e740071ddeca54253f
  ABI hash: 69d7c84bccd3deeae080810fc8d24a70
  export-list hash: eeaf9d5040d0ae996c2ee2f954a36b02
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f8b847b675a91348479da0c1f8d4b9ba
  sig of: Nothing
  used TH splices: False
  where
exports:
  Locking.available
  Locking.readOnly
  Locking.unavailable
  Locking.FileState
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
8582701fed041a182853ab1c3670c29b
  $fShowFileState :: GHC.Show.Show Locking.FileState
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Locking.FileState
                  Locking.$fShowFileState_$cshowsPrec
                  Locking.$fShowFileState_$cshow
                  Locking.$fShowFileState_$cshowList -}
ff0682ac1e7c069c0754ac260bf1015b
  $fShowFileState1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Unavailable"#) -}
221b27bd1309ea5ff6996232b196d252
  $fShowFileState2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ReadOnly"#) -}
0909133cf852e3533c11730fd02f6e09
  $fShowFileState3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Available"#) -}
8582701fed041a182853ab1c3670c29b
  $fShowFileState_$cshow :: Locking.FileState -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Locking.FileState) ->
                 case x of wild {
                   Locking.Available -> Locking.$fShowFileState3
                   Locking.ReadOnly -> Locking.$fShowFileState2
                   Locking.Unavailable -> Locking.$fShowFileState1 }) -}
8582701fed041a182853ab1c3670c29b
  $fShowFileState_$cshowList :: [Locking.FileState] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Locking.FileState
                   Locking.$w$cshowsPrec) -}
8582701fed041a182853ab1c3670c29b
  $fShowFileState_$cshowsPrec ::
    GHC.Types.Int -> Locking.FileState -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Locking.FileState)
                   (w2 :: GHC.Base.String) ->
                 Locking.$w$cshowsPrec w1 w2) -}
21fbadc6c018f4e7d7b101eea1eb5e4b
  $tc'Available :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14279688047069857860##
                   16023113845046319901##
                   Locking.$trModule
                   Locking.$tc'Available1) -}
60f7f97d4ad1b41f3071ed6951f801f4
  $tc'Available1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Available"#) -}
8b6af4c6799a72f4e7acb5553f26504a
  $tc'ReadOnly :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15543221538675817292##
                   13268552216148633256##
                   Locking.$trModule
                   Locking.$tc'ReadOnly1) -}
fd746e903fcb6042bf348bdf911754d7
  $tc'ReadOnly1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ReadOnly"#) -}
6d4949a19d5a9a709619575d319dfd58
  $tc'Unavailable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10920202963472231865##
                   17843543341528145777##
                   Locking.$trModule
                   Locking.$tc'Unavailable1) -}
95d08bde3c06e39b8d0cf9ff006e77ab
  $tc'Unavailable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Unavailable"#) -}
43ea633e456b66d23a9de680f3a217fd
  $tcFileState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6156842963047792518##
                   15543334701175481986##
                   Locking.$trModule
                   Locking.$tcFileState1) -}
597eee3be318cdf007559d3688f460a3
  $tcFileState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FileState"#) -}
a0b0ad2a4068210be8745494821c31de
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Locking.$trModule2
                   Locking.$trModule1) -}
77572f17032fe8072d65f8a6e39f61c9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Locking"#) -}
dd57f9e8609ef8d954a7607d45d14041
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "FileServerV2-0.1.0.0-1Temc20BNmO6CbLDWXQFSK"#) -}
8582701fed041a182853ab1c3670c29b
  $w$cshowsPrec ::
    Locking.FileState -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Locking.FileState) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Locking.Available
                   -> GHC.Base.++ @ GHC.Types.Char Locking.$fShowFileState3 w1
                   Locking.ReadOnly
                   -> GHC.Base.++ @ GHC.Types.Char Locking.$fShowFileState2 w1
                   Locking.Unavailable
                   -> GHC.Base.++ @ GHC.Types.Char Locking.$fShowFileState1 w1 }) -}
8582701fed041a182853ab1c3670c29b
  data FileState = Available | ReadOnly | Unavailable
12e62a16adab0acc120f7db7c5042c1e
  available :: Locking.FileState
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True) Locking.Available -}
8bcdb84ed548b4e2afff20298ea0b506
  readOnly :: Locking.FileState
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True) Locking.ReadOnly -}
59868cbc8549e63346540c0a3d3130bc
  unavailable :: Locking.FileState
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True) Locking.Unavailable -}
instance [safe] GHC.Show.Show [Locking.FileState]
  = Locking.$fShowFileState
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

